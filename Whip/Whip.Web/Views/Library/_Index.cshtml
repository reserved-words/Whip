@using Whip.Web.ExtensionMethods
@model Whip.Web.Models.LibraryViewModel

<div id="tab-library">
    <h1 id="top" class="anchor">Library</h1>

    <div class="row">
        <div class="col-sm-12">

            <div class="hidden-xs">
                <div class="btn-group block">
                    @foreach (var letter in Model.Artists)
                    {
                        if (!string.IsNullOrEmpty(letter.Key))
                        {
                            <a href="#@letter.Key.GetCategoryID()" class="btn btn-default">@Html.DisplayFor(m => letter.Key)</a>
                        }
                    }
                </div>
            </div>

            <div class="visible-xs">

                @{
                    var row = 0;
                    var maxPerRow = 9;
                    var keys = Model.Artists.Keys.Where(k => !string.IsNullOrEmpty(k)).ToArray();
                }

                <div class="btn-group-vertical btn-group-square">
                    @while (row < (keys.Count() / maxPerRow) + 1)
                    {
                        <div class="btn-group block">
                            @for (var i = 0; i < maxPerRow; i++)
                            {
                                var index = row * maxPerRow + i;

                                if (index < keys.Count())
                                {
                                    <a href="#@keys[index].GetCategoryID()" class="btn btn-default">@Html.DisplayFor(m => keys[index])</a>
                                }
                            }
                        </div>
                        row++;
                    }
                </div>


            </div>

        </div>
    </div>

    <div class="row">

        <div class="col-xs-12 col-md-3">

            @foreach (var letter in Model.Artists)
            {
                <div class="row">
                    <div class="col-xs-10">
                        <h2 id="@letter.Key.GetCategoryID()" class="anchor">@Html.DisplayFor(m => letter.Key)</h2>
                    </div>
                    <div class="col-xs-2 text-right" style="margin-top: 10px;">
                        @if (letter.Key != Model.Artists.Keys.First())
                        {
                            <a href="#top"><span class="glyphicon glyphicon-arrow-up" title="Back to top"></span></a>
                        }
                    </div>
                </div>

                <div class="btn-group-vertical btn-group-square btn-group-playlists">
                    @foreach (var artist in letter.Value)
                    {
                        <div class="btn-group block">
                            <button type="button" data-whip-play-url="@Html.DisplayFor(m => artist.PlayUrl)" class="btn btn-default">@Html.DisplayFor(m => artist.Name)</button>
                            <button type="button" data-whip-artist-url="@Url.Action("Artist", "Library", new { name = artist.Name })" class="btn btn-default">
                                <span class="glyphicon glyphicon-th-list"></span>
                            </button>
                        </div>
                    }
                </div>
            }

        </div>

        <div class="hidden-xs hidden-sm col-md-9">

            <div id="library-artist" style="margin-top: 20px;">



            </div>

        </div>

    </div>
</div>